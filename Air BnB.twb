<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='N-Cluster' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
        <calculation class='tableau' formula='3' />
        <range max='10' min='1' />
      </column>
    </datasource>
    <datasource caption='listings' inline='true' name='federated.11b1czv1nto7od14ifqos0hwdvd4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='listings' name='textscan.1qvu4dl0iw3nhl19t6qbk0ekbwz8'>
            <connection class='textscan' directory='D:/NMIMS/Visual Analytics/Project' filename='listings.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1qvu4dl0iw3nhl19t6qbk0ekbwz8' name='listings.csv' table='[listings#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='integer' name='host_id' ordinal='2' />
            <column datatype='string' name='host_name' ordinal='3' />
            <column datatype='string' name='neighbourhood_group' ordinal='4' />
            <column datatype='string' name='neighbourhood' ordinal='5' />
            <column datatype='real' name='latitude' ordinal='6' />
            <column datatype='real' name='longitude' ordinal='7' />
            <column datatype='string' name='room_type' ordinal='8' />
            <column datatype='integer' name='price' ordinal='9' />
            <column datatype='integer' name='minimum_nights' ordinal='10' />
            <column datatype='integer' name='number_of_reviews' ordinal='11' />
            <column datatype='date' name='last_review' ordinal='12' />
            <column datatype='real' name='reviews_per_month' ordinal='13' />
            <column datatype='integer' name='calculated_host_listings_count' ordinal='14' />
            <column datatype='integer' name='availability_365' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1qvu4dl0iw3nhl19t6qbk0ekbwz8' name='listings.csv' table='[listings#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='integer' name='host_id' ordinal='2' />
            <column datatype='string' name='host_name' ordinal='3' />
            <column datatype='string' name='neighbourhood_group' ordinal='4' />
            <column datatype='string' name='neighbourhood' ordinal='5' />
            <column datatype='real' name='latitude' ordinal='6' />
            <column datatype='real' name='longitude' ordinal='7' />
            <column datatype='string' name='room_type' ordinal='8' />
            <column datatype='integer' name='price' ordinal='9' />
            <column datatype='integer' name='minimum_nights' ordinal='10' />
            <column datatype='integer' name='number_of_reviews' ordinal='11' />
            <column datatype='date' name='last_review' ordinal='12' />
            <column datatype='real' name='reviews_per_month' ordinal='13' />
            <column datatype='integer' name='calculated_host_listings_count' ordinal='14' />
            <column datatype='integer' name='availability_365' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host_id]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>host_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[host_name]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>host_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighbourhood_group]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>neighbourhood_group</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighbourhood]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>neighbourhood</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room_type]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>room_type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum_nights]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>minimum_nights</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_reviews]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>number_of_reviews</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_review</remote-name>
            <remote-type>133</remote-type>
            <local-name>[last_review]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>last_review</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews_per_month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reviews_per_month]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>reviews_per_month</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calculated_host_listings_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calculated_host_listings_count]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>calculated_host_listings_count</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>availability_365</remote-name>
            <remote-type>20</remote-type>
            <local-name>[availability_365]</local-name>
            <parent-name>[listings.csv]</parent-name>
            <remote-alias>availability_365</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Kmeans' datatype='integer' name='[Calculation_1001769457298460674]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_INT(&quot;from sklearn.preprocessing import LabelEncoder&#13;&#10;from sklearn.cluster import KMeans&#13;&#10;import numpy as np&#13;&#10;&#13;&#10;LE = LabelEncoder()&#13;&#10;&#13;&#10;neighbourhood = LE.fit_transform(_arg1)&#13;&#10;room_type = LE.fit_transform(_arg2)&#13;&#10;&#13;&#10;price = _arg3&#13;&#10;minimum_nights = _arg4&#13;&#10;number_of_reviews = _arg5&#13;&#10;availability_365 = _arg6&#13;&#10;calculated_host_listings_count = _arg7&#13;&#10;&#13;&#10;N = _arg8[0]&#13;&#10;&#13;&#10;X = np.column_stack(&#13;&#10;    [&#13;&#10;        neighbourhood,&#13;&#10;        room_type,&#13;&#10;        price,&#13;&#10;        minimum_nights,&#13;&#10;        number_of_reviews,&#13;&#10;        availability_365,&#13;&#10;        calculated_host_listings_count,&#13;&#10;    ]&#13;&#10;)&#13;&#10;&#13;&#10;kmeans = KMeans(n_clusters=N, random_state=35)&#13;&#10;return kmeans.fit_predict(X).tolist()&#13;&#10;&#13;&#10;&quot;,&#13;&#10;ATTR([neighbourhood]),&#13;&#10;ATTR([room_type]),&#13;&#10;AVG([price]),&#13;&#10;MEDIAN([minimum_nights]),&#13;&#10;SUM([number_of_reviews]),&#13;&#10;AVG([availability_365]),&#13;&#10;AVG([calculated_host_listings_count]),&#13;&#10;[Parameters].[Parameter 1]&#13;&#10;)'>
          <table-calc ordering-field='[federated.11b1czv1nto7od14ifqos0hwdvd4].[host_id]' ordering-type='Field' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='listings.csv' datatype='table' name='[__tableau_internal_object_id__].[listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2]' role='measure' type='quantitative' />
      <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
      <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
      <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
      <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Last Review' datatype='date' name='[last_review]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
      <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
      <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Reviews Per Month' datatype='real' name='[reviews_per_month]' role='dimension' type='quantitative' />
      <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='N-Cluster' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
          <range max='10' min='1' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='listings.csv' id='listings.csv_CDD8BFF0AA2D414D91C7F7FD71E250E2'>
            <properties context=''>
              <relation connection='textscan.1qvu4dl0iw3nhl19t6qbk0ekbwz8' name='listings.csv' table='[listings#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='name' ordinal='1' />
                  <column datatype='integer' name='host_id' ordinal='2' />
                  <column datatype='string' name='host_name' ordinal='3' />
                  <column datatype='string' name='neighbourhood_group' ordinal='4' />
                  <column datatype='string' name='neighbourhood' ordinal='5' />
                  <column datatype='real' name='latitude' ordinal='6' />
                  <column datatype='real' name='longitude' ordinal='7' />
                  <column datatype='string' name='room_type' ordinal='8' />
                  <column datatype='integer' name='price' ordinal='9' />
                  <column datatype='integer' name='minimum_nights' ordinal='10' />
                  <column datatype='integer' name='number_of_reviews' ordinal='11' />
                  <column datatype='date' name='last_review' ordinal='12' />
                  <column datatype='real' name='reviews_per_month' ordinal='13' />
                  <column datatype='integer' name='calculated_host_listings_count' ordinal='14' />
                  <column datatype='integer' name='availability_365' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Listings v/s Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='listings' name='federated.11b1czv1nto7od14ifqos0hwdvd4' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='N-Cluster' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11b1czv1nto7od14ifqos0hwdvd4'>
            <column caption='Kmeans' datatype='integer' name='[Calculation_1001769457298460674]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_INT(&quot;from sklearn.preprocessing import LabelEncoder&#13;&#10;from sklearn.cluster import KMeans&#13;&#10;import numpy as np&#13;&#10;&#13;&#10;LE = LabelEncoder()&#13;&#10;&#13;&#10;neighbourhood = LE.fit_transform(_arg1)&#13;&#10;room_type = LE.fit_transform(_arg2)&#13;&#10;&#13;&#10;price = _arg3&#13;&#10;minimum_nights = _arg4&#13;&#10;number_of_reviews = _arg5&#13;&#10;availability_365 = _arg6&#13;&#10;calculated_host_listings_count = _arg7&#13;&#10;&#13;&#10;N = _arg8[0]&#13;&#10;&#13;&#10;X = np.column_stack(&#13;&#10;    [&#13;&#10;        neighbourhood,&#13;&#10;        room_type,&#13;&#10;        price,&#13;&#10;        minimum_nights,&#13;&#10;        number_of_reviews,&#13;&#10;        availability_365,&#13;&#10;        calculated_host_listings_count,&#13;&#10;    ]&#13;&#10;)&#13;&#10;&#13;&#10;kmeans = KMeans(n_clusters=N, random_state=35)&#13;&#10;return kmeans.fit_predict(X).tolist()&#13;&#10;&#13;&#10;&quot;,&#13;&#10;ATTR([neighbourhood]),&#13;&#10;ATTR([room_type]),&#13;&#10;AVG([price]),&#13;&#10;MEDIAN([minimum_nights]),&#13;&#10;SUM([number_of_reviews]),&#13;&#10;AVG([availability_365]),&#13;&#10;AVG([calculated_host_listings_count]),&#13;&#10;[Parameters].[Parameter 1]&#13;&#10;)'>
                <table-calc ordering-field='[federated.11b1czv1nto7od14ifqos0hwdvd4].[host_id]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
            <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
            <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[host_id]' derivation='None' name='[none:host_id:ok]' pivot='key' type='ordinal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[calculated_host_listings_count]' derivation='Sum' name='[sum:calculated_host_listings_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1001769457298460674]' derivation='User' name='[usr:Calculation_1001769457298460674:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.11b1czv1nto7od14ifqos0hwdvd4].[host_id]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11b1czv1nto7od14ifqos0hwdvd4].[usr:Calculation_1001769457298460674:qk:2]' />
              <lod column='[federated.11b1czv1nto7od14ifqos0hwdvd4].[none:host_id:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11b1czv1nto7od14ifqos0hwdvd4].[sum:calculated_host_listings_count:qk]</rows>
        <cols>[federated.11b1czv1nto7od14ifqos0hwdvd4].[sum:price:qk]</cols>
      </table>
      <simple-id uuid='{7C78749E-53B9-4133-8387-A04127B44DBF}' />
    </worksheet>
    <worksheet name='Map Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='listings' name='federated.11b1czv1nto7od14ifqos0hwdvd4' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='N-Cluster' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11b1czv1nto7od14ifqos0hwdvd4'>
            <column caption='Kmeans' datatype='integer' name='[Calculation_1001769457298460674]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_INT(&quot;from sklearn.preprocessing import LabelEncoder&#13;&#10;from sklearn.cluster import KMeans&#13;&#10;import numpy as np&#13;&#10;&#13;&#10;LE = LabelEncoder()&#13;&#10;&#13;&#10;neighbourhood = LE.fit_transform(_arg1)&#13;&#10;room_type = LE.fit_transform(_arg2)&#13;&#10;&#13;&#10;price = _arg3&#13;&#10;minimum_nights = _arg4&#13;&#10;number_of_reviews = _arg5&#13;&#10;availability_365 = _arg6&#13;&#10;calculated_host_listings_count = _arg7&#13;&#10;&#13;&#10;N = _arg8[0]&#13;&#10;&#13;&#10;X = np.column_stack(&#13;&#10;    [&#13;&#10;        neighbourhood,&#13;&#10;        room_type,&#13;&#10;        price,&#13;&#10;        minimum_nights,&#13;&#10;        number_of_reviews,&#13;&#10;        availability_365,&#13;&#10;        calculated_host_listings_count,&#13;&#10;    ]&#13;&#10;)&#13;&#10;&#13;&#10;kmeans = KMeans(n_clusters=N, random_state=35)&#13;&#10;return kmeans.fit_predict(X).tolist()&#13;&#10;&#13;&#10;&quot;,&#13;&#10;ATTR([neighbourhood]),&#13;&#10;ATTR([room_type]),&#13;&#10;AVG([price]),&#13;&#10;MEDIAN([minimum_nights]),&#13;&#10;SUM([number_of_reviews]),&#13;&#10;AVG([availability_365]),&#13;&#10;AVG([calculated_host_listings_count]),&#13;&#10;[Parameters].[Parameter 1]&#13;&#10;)'>
                <table-calc ordering-field='[federated.11b1czv1nto7od14ifqos0hwdvd4].[host_id]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
            <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[host_id]' derivation='None' name='[none:host_id:ok]' pivot='key' type='ordinal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1001769457298460674]' derivation='User' name='[usr:Calculation_1001769457298460674:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.11b1czv1nto7od14ifqos0hwdvd4].[host_id]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11b1czv1nto7od14ifqos0hwdvd4].[usr:Calculation_1001769457298460674:qk:2]' />
              <lod column='[federated.11b1czv1nto7od14ifqos0hwdvd4].[none:host_id:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11b1czv1nto7od14ifqos0hwdvd4].[avg:latitude:qk]</rows>
        <cols>[federated.11b1czv1nto7od14ifqos0hwdvd4].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{7ED3FE9C-7B5F-45A7-B237-567A7001D9DC}' />
    </worksheet>
    <worksheet name='Price v/s Availability'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='listings' name='federated.11b1czv1nto7od14ifqos0hwdvd4' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='N-Cluster' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11b1czv1nto7od14ifqos0hwdvd4'>
            <column caption='Kmeans' datatype='integer' name='[Calculation_1001769457298460674]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_INT(&quot;from sklearn.preprocessing import LabelEncoder&#13;&#10;from sklearn.cluster import KMeans&#13;&#10;import numpy as np&#13;&#10;&#13;&#10;LE = LabelEncoder()&#13;&#10;&#13;&#10;neighbourhood = LE.fit_transform(_arg1)&#13;&#10;room_type = LE.fit_transform(_arg2)&#13;&#10;&#13;&#10;price = _arg3&#13;&#10;minimum_nights = _arg4&#13;&#10;number_of_reviews = _arg5&#13;&#10;availability_365 = _arg6&#13;&#10;calculated_host_listings_count = _arg7&#13;&#10;&#13;&#10;N = _arg8[0]&#13;&#10;&#13;&#10;X = np.column_stack(&#13;&#10;    [&#13;&#10;        neighbourhood,&#13;&#10;        room_type,&#13;&#10;        price,&#13;&#10;        minimum_nights,&#13;&#10;        number_of_reviews,&#13;&#10;        availability_365,&#13;&#10;        calculated_host_listings_count,&#13;&#10;    ]&#13;&#10;)&#13;&#10;&#13;&#10;kmeans = KMeans(n_clusters=N, random_state=35)&#13;&#10;return kmeans.fit_predict(X).tolist()&#13;&#10;&#13;&#10;&quot;,&#13;&#10;ATTR([neighbourhood]),&#13;&#10;ATTR([room_type]),&#13;&#10;AVG([price]),&#13;&#10;MEDIAN([minimum_nights]),&#13;&#10;SUM([number_of_reviews]),&#13;&#10;AVG([availability_365]),&#13;&#10;AVG([calculated_host_listings_count]),&#13;&#10;[Parameters].[Parameter 1]&#13;&#10;)'>
                <table-calc ordering-field='[federated.11b1czv1nto7od14ifqos0hwdvd4].[host_id]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
            <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
            <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[host_id]' derivation='None' name='[none:host_id:ok]' pivot='key' type='ordinal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[availability_365]' derivation='Sum' name='[sum:availability_365:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1001769457298460674]' derivation='User' name='[usr:Calculation_1001769457298460674:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.11b1czv1nto7od14ifqos0hwdvd4].[host_id]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11b1czv1nto7od14ifqos0hwdvd4].[usr:Calculation_1001769457298460674:qk:2]' />
              <lod column='[federated.11b1czv1nto7od14ifqos0hwdvd4].[none:host_id:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11b1czv1nto7od14ifqos0hwdvd4].[sum:price:qk]</rows>
        <cols>[federated.11b1czv1nto7od14ifqos0hwdvd4].[sum:availability_365:qk]</cols>
      </table>
      <simple-id uuid='{5753BAFB-D8D3-4CA7-AF49-F9A90C5D78AF}' />
    </worksheet>
    <worksheet name='Price v/s Reviews'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='listings' name='federated.11b1czv1nto7od14ifqos0hwdvd4' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='N-Cluster' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11b1czv1nto7od14ifqos0hwdvd4'>
            <column caption='Kmeans' datatype='integer' name='[Calculation_1001769457298460674]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_INT(&quot;from sklearn.preprocessing import LabelEncoder&#13;&#10;from sklearn.cluster import KMeans&#13;&#10;import numpy as np&#13;&#10;&#13;&#10;LE = LabelEncoder()&#13;&#10;&#13;&#10;neighbourhood = LE.fit_transform(_arg1)&#13;&#10;room_type = LE.fit_transform(_arg2)&#13;&#10;&#13;&#10;price = _arg3&#13;&#10;minimum_nights = _arg4&#13;&#10;number_of_reviews = _arg5&#13;&#10;availability_365 = _arg6&#13;&#10;calculated_host_listings_count = _arg7&#13;&#10;&#13;&#10;N = _arg8[0]&#13;&#10;&#13;&#10;X = np.column_stack(&#13;&#10;    [&#13;&#10;        neighbourhood,&#13;&#10;        room_type,&#13;&#10;        price,&#13;&#10;        minimum_nights,&#13;&#10;        number_of_reviews,&#13;&#10;        availability_365,&#13;&#10;        calculated_host_listings_count,&#13;&#10;    ]&#13;&#10;)&#13;&#10;&#13;&#10;kmeans = KMeans(n_clusters=N, random_state=35)&#13;&#10;return kmeans.fit_predict(X).tolist()&#13;&#10;&#13;&#10;&quot;,&#13;&#10;ATTR([neighbourhood]),&#13;&#10;ATTR([room_type]),&#13;&#10;AVG([price]),&#13;&#10;MEDIAN([minimum_nights]),&#13;&#10;SUM([number_of_reviews]),&#13;&#10;AVG([availability_365]),&#13;&#10;AVG([calculated_host_listings_count]),&#13;&#10;[Parameters].[Parameter 1]&#13;&#10;)'>
                <table-calc ordering-field='[federated.11b1czv1nto7od14ifqos0hwdvd4].[host_id]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
            <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
            <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[host_id]' derivation='None' name='[none:host_id:ok]' pivot='key' type='ordinal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[number_of_reviews]' derivation='Sum' name='[sum:number_of_reviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1001769457298460674]' derivation='User' name='[usr:Calculation_1001769457298460674:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.11b1czv1nto7od14ifqos0hwdvd4].[host_id]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11b1czv1nto7od14ifqos0hwdvd4].[sum:price:qk]' field-type='quantitative' max='6923' min='-202' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11b1czv1nto7od14ifqos0hwdvd4].[sum:number_of_reviews:qk]' field-type='quantitative' max='566' min='-21' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.11b1czv1nto7od14ifqos0hwdvd4].[usr:Calculation_1001769457298460674:qk:2]' value='Kmeans' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11b1czv1nto7od14ifqos0hwdvd4].[usr:Calculation_1001769457298460674:qk:2]' />
              <lod column='[federated.11b1czv1nto7od14ifqos0hwdvd4].[none:host_id:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11b1czv1nto7od14ifqos0hwdvd4].[sum:number_of_reviews:qk]</rows>
        <cols>[federated.11b1czv1nto7od14ifqos0hwdvd4].[sum:price:qk]</cols>
      </table>
      <simple-id uuid='{362B74CA-E3F5-4EFA-BCE5-BF64FAE98FE0}' />
    </worksheet>
    <worksheet name='Review v/s Availability'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='listings' name='federated.11b1czv1nto7od14ifqos0hwdvd4' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='N-Cluster' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11b1czv1nto7od14ifqos0hwdvd4'>
            <column caption='Kmeans' datatype='integer' name='[Calculation_1001769457298460674]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_INT(&quot;from sklearn.preprocessing import LabelEncoder&#13;&#10;from sklearn.cluster import KMeans&#13;&#10;import numpy as np&#13;&#10;&#13;&#10;LE = LabelEncoder()&#13;&#10;&#13;&#10;neighbourhood = LE.fit_transform(_arg1)&#13;&#10;room_type = LE.fit_transform(_arg2)&#13;&#10;&#13;&#10;price = _arg3&#13;&#10;minimum_nights = _arg4&#13;&#10;number_of_reviews = _arg5&#13;&#10;availability_365 = _arg6&#13;&#10;calculated_host_listings_count = _arg7&#13;&#10;&#13;&#10;N = _arg8[0]&#13;&#10;&#13;&#10;X = np.column_stack(&#13;&#10;    [&#13;&#10;        neighbourhood,&#13;&#10;        room_type,&#13;&#10;        price,&#13;&#10;        minimum_nights,&#13;&#10;        number_of_reviews,&#13;&#10;        availability_365,&#13;&#10;        calculated_host_listings_count,&#13;&#10;    ]&#13;&#10;)&#13;&#10;&#13;&#10;kmeans = KMeans(n_clusters=N, random_state=35)&#13;&#10;return kmeans.fit_predict(X).tolist()&#13;&#10;&#13;&#10;&quot;,&#13;&#10;ATTR([neighbourhood]),&#13;&#10;ATTR([room_type]),&#13;&#10;AVG([price]),&#13;&#10;MEDIAN([minimum_nights]),&#13;&#10;SUM([number_of_reviews]),&#13;&#10;AVG([availability_365]),&#13;&#10;AVG([calculated_host_listings_count]),&#13;&#10;[Parameters].[Parameter 1]&#13;&#10;)'>
                <table-calc ordering-field='[federated.11b1czv1nto7od14ifqos0hwdvd4].[host_id]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
            <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
            <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[host_id]' derivation='None' name='[none:host_id:ok]' pivot='key' type='ordinal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[availability_365]' derivation='Sum' name='[sum:availability_365:qk]' pivot='key' type='quantitative' />
            <column-instance column='[number_of_reviews]' derivation='Sum' name='[sum:number_of_reviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1001769457298460674]' derivation='User' name='[usr:Calculation_1001769457298460674:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.11b1czv1nto7od14ifqos0hwdvd4].[host_id]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11b1czv1nto7od14ifqos0hwdvd4].[usr:Calculation_1001769457298460674:qk:2]' />
              <lod column='[federated.11b1czv1nto7od14ifqos0hwdvd4].[none:host_id:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11b1czv1nto7od14ifqos0hwdvd4].[sum:number_of_reviews:qk]</rows>
        <cols>[federated.11b1czv1nto7od14ifqos0hwdvd4].[sum:availability_365:qk]</cols>
      </table>
      <simple-id uuid='{628C85E2-2349-4D84-B4D8-D4B09B1692C8}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Air BnB Analysis'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='N-Cluster' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
          <range max='10' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88932' id='7' param='horz' type-v2='layout-flow' w='98828' x='586' y='10026'>
            <zone h='88932' id='5' type-v2='layout-basic' w='79355' x='586' y='10026'>
              <zone h='44463' id='3' name='Price v/s Reviews' w='25842' x='586' y='10026'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#000000' />
                </zone-style>
              </zone>
              <zone h='44469' id='10' name='Price v/s Availability' w='39673' x='586' y='54489'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44463' id='11' name='Review v/s Availability' w='27489' x='52452' y='10026'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44469' id='12' name='Map Analysis' w='39682' x='40259' y='54489'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44463' id='13' name='Listings v/s Price' w='26024' x='26428' y='10026'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='266' h='88932' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='19473' x='79941' y='10026'>
              <zone h='9506' id='8' name='Price v/s Reviews' pane-specification-id='0' param='[federated.11b1czv1nto7od14ifqos0hwdvd4].[usr:Calculation_1001769457298460674:qk:2]' type-v2='color' w='19473' x='79941' y='10026'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone custom-title='true' h='10287' id='9' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='19473' x='79941' y='19532'>
                <formatted-text>
                  <run fontalignment='1' fontcolor='#ffffff' italic='true'>N-Cluster</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='8984' id='15' type-v2='text' w='98828' x='586' y='1042'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='14' italic='true'>Visual Analytics Project</run>
              <run fontalignment='1'>Ã†&#10;</run>
              <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='14' italic='true'>Title: </run>
              <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='14' italic='true'>K-Mean Clustering on Air BnB Dataset</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#000000' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='19010' id='14' type-v2='text' w='19034' x='80161' y='79297'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='14'>Made By:</run>
            <run fontalignment='1'>Ã†&#10;</run>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='14'>Mausmi Sinha A241</run>
            <run fontalignment='1'>Ã†&#10;</run>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='14'>Aman Singh Bhogal A236</run>
            <run fontalignment='1'>Ã†&#10;</run>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='14'>B.Tech IT 4th Year</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='20' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone forceUpdate='true' h='8984' id='15' type-v2='text' w='98828' x='586' y='1042'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='14' italic='true'>Visual Analytics Project</run>
                    <run fontalignment='1'>Ã†&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='14' italic='true'>Title: </run>
                    <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='14' italic='true'>K-Mean Clustering on Air BnB Dataset</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44463' id='3' is-fixed='true' name='Price v/s Reviews' w='25842' x='586' y='10026'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#000000' />
                  </zone-style>
                </zone>
                <zone h='9506' id='8' name='Price v/s Reviews' pane-specification-id='0' param='[federated.11b1czv1nto7od14ifqos0hwdvd4].[usr:Calculation_1001769457298460674:qk:2]' type-v2='color' w='19473' x='79941' y='10026'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44463' id='13' is-fixed='true' name='Listings v/s Price' w='26024' x='26428' y='10026'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44463' id='11' is-fixed='true' name='Review v/s Availability' w='27489' x='52452' y='10026'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='10287' id='9' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='19473' x='79941' y='19532'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#ffffff' italic='true'>N-Cluster</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44469' id='10' is-fixed='true' name='Price v/s Availability' w='39673' x='586' y='54489'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44469' id='12' is-fixed='true' name='Map Analysis' w='39682' x='40259' y='54489'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='19010' id='14' type-v2='text' w='19034' x='80161' y='79297'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='14'>Made By:</run>
                    <run fontalignment='1'>Ã†&#10;</run>
                    <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='14'>Mausmi Sinha A241</run>
                    <run fontalignment='1'>Ã†&#10;</run>
                    <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='14'>Aman Singh Bhogal A236</run>
                    <run fontalignment='1'>Ã†&#10;</run>
                    <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='14'>B.Tech IT 4th Year</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#000000' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{47F93909-8130-4712-818A-4C30191B69A0}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Price v/s Reviews'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.11b1czv1nto7od14ifqos0hwdvd4].[usr:Calculation_1001769457298460674:qk:2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11b1czv1nto7od14ifqos0hwdvd4].[none:host_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF6B7B67-9C27-4FD5-8285-A0C5E0F66D68}' />
    </window>
    <window class='worksheet' name='Price v/s Availability'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11b1czv1nto7od14ifqos0hwdvd4].[usr:Calculation_1001769457298460674:qk:2]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11b1czv1nto7od14ifqos0hwdvd4].[none:host_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F75DCEA-A99A-4AF5-AC25-2157AF9F0AAD}' />
    </window>
    <window class='worksheet' name='Review v/s Availability'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11b1czv1nto7od14ifqos0hwdvd4].[usr:Calculation_1001769457298460674:qk:2]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11b1czv1nto7od14ifqos0hwdvd4].[none:host_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F0515FC-85BB-412A-BA19-7D639C7BF0B8}' />
    </window>
    <window class='worksheet' name='Listings v/s Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.11b1czv1nto7od14ifqos0hwdvd4].[usr:Calculation_1001769457298460674:qk:2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11b1czv1nto7od14ifqos0hwdvd4].[none:host_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E5C5A046-E58F-47EE-81C2-245AD87368EE}' />
    </window>
    <window class='worksheet' name='Map Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.11b1czv1nto7od14ifqos0hwdvd4].[usr:Calculation_1001769457298460674:qk:2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11b1czv1nto7od14ifqos0hwdvd4].[none:host_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{924BF083-E01A-46BB-AC44-32E951DBB728}' />
    </window>
    <window class='dashboard' maximized='true' name='Air BnB Analysis'>
      <viewpoints>
        <viewpoint name='Listings v/s Price'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map Analysis'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Price v/s Availability'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Price v/s Reviews'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Review v/s Availability'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <device-preview visible='true' />
      <simple-id uuid='{02FB3797-8972-4D02-9282-01C3E351770C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Air BnB Analysis' width='192'>
      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
      7W/iI43/AzLnuUprHivaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Listings v/s Price' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAARSElEQVR4nO3d63NU93kH8O/Z3bOXs9LedGGRQRJC4mILcYlkO4AJNsZTO4mTtJO2L/Ki
      Y09ftNN/pTOdXiaTpn7RTNpOY098SZvYwZcQMAYTA+JiuRJCCCSQ0Gql1d5v59cXwmuwDvH5
      bXU4pznfzwwDLI/O89OMHvY5l2d/iq7rAkQu5QMAj8dj9zqIbOFbj4MkEgkMDw8jmUxicnLS
      1NdomoZCoWA6x65du3Dp0iXT8d3d3chkMshkMqbiBwYGcPPmTZRKJUvWpKoq+vv7MTY2Zsnx
      Gd9cvOkCCLQkcGj/MG5MfIqOnh2oZOawUg+gQxM4cfocTp8+jd7eXly8eNHU8VpaWpDL5Uwv
      XlEUfPjhh6bjFxcXkUqlkEqlTMUXCgWMj48jn89bsia/349CoYCPP/7YkuMzvrl4071PrZjB
      +SuTSHZ04JNPzmFD5yZ0xcIo+GOImF7C/YshspvpAgh39GC4L4aT58bw3JED+PV77yKohREN
      h1BpInE4HG7iq4jWl+kWSC/lkBNd6O3agPnUEnZu68OpT0bRFhIoAfBLJpZpf4isYroAcst3
      cPLkHQDA5I3pxuvLTSZmC0ROYNv1T7ZA5AS2FQBbIHIC2wqALRA5AVsgcrV1uRPcjKonhI7B
      ZwBlbQ2KehXZmU9RXlmwYWXkJrYUgOL1Ib73u/C3JAz/Xeg6oj17MHXsh9BrzdxlIDLHnhZI
      AEKvf0VMHULwQVWyli3vAEKvIX3u51BiPVAMWiC9XkHu1jhEvWrD6shNbDsHqBdXsDJv/kEm
      IivYdhUoFArZlZqowbYCkHnsmMgqthUAp9DICUz/FCoeFcNP7kdbREP/ziFsbI+ivasHO/u7
      m0rMFoicwPRJcDAcxvS1KRw4+EcoFmbg3bwfQB1FeDEzNQtN0xAKhaBpmunkMrHBYFAqPhQK
      Sa3n8+PLXHqVWZPf75f+HhhvfbzpAqgLH74+sgsfHP8IewfboCIGBRUU4UO0pQVbBgbQ1dWF
      SsXcjatoNGp6XhcANm/ejO3bt5uO7+3tRSwWQ3t7u6n4np4eKIqCYrFoyZpUVUV3dzey2awl
      x2d8c/GmCyASi6NYLKMzDuQRR/7mp6j6E+jQBGYyGayMjiKTyZieCe7s7MSdO3dMLz4cDuP8
      +fOm44vFotRMMADpmWCZNfn9qyNDMt+D7PfMePl40wWQmpnAsZmJ1b/cvH331RmY+wyItWQ+
      EYLIKrZdivF6vXalJmqwrQACgYBdqYkabCsAtkDkBGyByNXYApGrsQUiV2MLRK5mWwF8fmOI
      yE62FYDMIwdEVrGtAHw+24bRiBpsKwBVVe1KTdTAFohcjS0QuRpbIHI1tkDkaqb7EI8awosv
      PI03f3EMzxx9FoXULHLQ0KEJvH/ijHxitkDkAKZ/ChVFR61eh+ININmZQEH1IJPJYhk+9CUS
      GBgZQTKZRCRibss8v99venwSWN3iUkYz26S2tbVJb5Nqlqqq2Lp1q9QNQNnvmfHy8eb/GxZA
      KBxBvH0jysvzUP1RBCMKkl4PrqTTSH30kaXbpALAyZMnTcfu2LFDaiQyn89Lj0TKrMnv9yOf
      z0ttkypzfMY3F2+6AHxqAJcvXkZAT+PDC1WUV1IoCxWtfqAMQPbZTp4EkxOYLoByYQVjYyt3
      /7bYeL3Zz3fjw3DkBLZdBZLptYmswvsA5GqcByBXYwtErsYWiFyNLRC5GlsgcjXOBJOr2VYA
      iqLYlZqowbYCKJfLdqUmamALRK7GFohcjS0QuRpbIHI1tkDkaqYLwBsI4/t/8iIABU8+9QyG
      dvZjz+MHcPTw/qYSswUiJzA9ECPqVeRLJajBJIZ39+LK+SIUjxepug9bEwn0S84Et7W1YXFx
      8asD7+JMMOOtiDddAF6fikR7JxJRD+bmFhGJxVBVVGxWFbydTmNBciY4kUggnU6bXz04E8z4
      9Y+XGIoXOPGbE6hVsnjn3RNQqkVUhA+aClQABKWWAalPhCCyiukCqJYLmJ6eXvN6s4+0BQIB
      6U+FIFpvtl0FEkLYlZqowbYCYAtETsBdIsnV2AKRq7EFIldjC0SuZlsB6LpuV2qiBtsKoFqt
      2pWaqMG2AggGZe8dE60/2wqgXq/blZqogS0QuRpbIHI1tkDkamyByNXYApGrmZ4HUMNx/NVf
      /DH+/p9ewfZ9T2F30o80wkhowGuvvSWdmC0QOYH5gZj8Esau3oDa0o4DQ31ATcfC1HV8llmd
      Ce6TnAmu1+tSH5HOmWDGWxFvugDC0Q709fVh9vokfvGrX2Pfrp3QtRb0h4DX02nMS84Ed3R0
      YGFhwfzqwZlgxq9/vOkCyGcW8KMf/qjx93fmb0sl/jKeBJMT2HYSXKvV7EpN1GBbAYRCIbtS
      EzXwPgC5GlsgcjW2QORqhgUQbtuIeAjYtKnLssRsgcgJDC+DPvOtP8NQPIepG7P495lbliRm
      C0ROYPgO8P4v30Cm4oGVH+GvaZp1BycyybAA/C0JaL46cvmCZYm5PwA5gWEBVLPzWC55EWkN
      W5aYD8ORExgWQDmfwZkzZ+DxW1cAbIHICQwLwOvzY/jJg5i7OWVZYrZA5ASGBRBq70Hh1mVs
      2jJgWWK2QOQEhgWQuX0N3ngPbs/ctCwxWyBygrUF4PHiyMG9+OlPfoK617qxRbZA5ARrC0Cv
      I5joxksvvQzNY93dWrZA5ASGd4J/8eq/IRzWkIh+cRVIDcfxNy9/H3/3j6/g0NPPolNTsSJU
      xDXg1Z+9Lp1Y0zTuEUa2MyyAtoERvPTNIejZLP72X/4DwOpM8OX/mYLQ61hcziI3v4xItA2f
      LvnQ18RMcDQaNT2vC3AmmPHWxBsWwMrsOG7d3oSbt+YR8HlQrukIRzvQ29OLwZ2DGNk9gIsf
      n0E1EEKfBrzZxExwS0uL9DsAZ4IZv97xhgXQ2jWAEHIYHh7BxrYw/vP1t5HPLODH//xjAMDl
      sct3Iz+TSn6vcDjMFohsZ3gZdGn6CgpqJ66NXcC5S1ctSVwsFi05LpEMwwKIJLdgc7uGsBbA
      xFVrCoA7xJATGBaAXi1D8Vm7h1c4bN1zRkRmrS0ARcHw7m1IZ4pQLBwIYAtETrD2JFgIjE/P
      Ye7Kb9HR+5hlidkCkRMYtkDbtu3A4ee+DVGSuyQogy0QOYFhAZy/cAnpXAHP7P+aZYkLBeum
      zYjMMiyA3OIthLwCrx2Tu2kjQwhh2bGJzDI8CT58+ADC8Ufw+NBWyxK3tLRYdmwiswxPgt/9
      rzfwLoCjRw9Zllj2kQMiK6wtAEXBD17+a0QDQHFpxrLEQgio4Th8odb7X9d1lJdvQ+h8XJqs
      Z/gO8Oabb8Gfv4nWjs2WJY5v3onwYy9A8d6zBCEACBTuXMf08X8FBC+VkrUMH4b7xvPfw1Ci
      gMlr07g+bc1YZN0fhcf7pfSKAqHrCMSS8KoB1Cu8WUbWMiyAk8ffg3gsiYRq3Z3g3PR5FHIZ
      qKF75wcEhK4jPz/JH356KAwLIJeaR3ukH2dHJyxLLOoVLE+etez4RGYY3gcItsYRTbTj0BOD
      90SqOHr0CAAFTxx8GoPberF91z4cfHxvU4l5H4CcwPAdoFouoFTVkc9+cbdWDQQQ1lSowSTU
      yhw6kwMAKliBF72JBLYNDyOZTKK1tdXokGtomiZ1N3hwcFCqaJoZiUwkElIjkTJrUlUV/f39
      UFXVkuMzvrl4w8ug3/n28+ju6cZYeq7xcrWYQ75Uh9DL0Fpi8KkqoHgh4MGVdBpLZ85YOhLp
      8Xhw6tQp0/HpdFpqJLJQKGBiYkLq/oTMmvx+PwqFAs6eNd/2yX7PjJePN7wMen1yAt2dYVyb
      nm28HI52oFKqoH9zGOM3M8inLqGmRtGuCRQBqEJA3P1lhkzs/yX+YeQwG3vv73avh/GrDFug
      pfQi3n77PVRL2cZr+cwCjh8//qXIHJZMp79fa2srZ4LJdoYnwUrjd+sug2az2a8OIrKY4TvA
      psH96KlfRTC+F59dvf6Ql0T08Bi+A3zwxk/R0rMHqYV5yxLzaVByAsMCiG3ajr5oHnkLN3Jk
      /09OYPzx6LMTuHRLwFczf01clpUD90RmGRbAN178c6i5WXRv6bEsMWeCyQkMC+Cz82cRfWQb
      lhcXLEvMFoicwLAA6v4wAtU5lOuGF4nWBVsgcgKDAlDQn4zi6oKKDfGQZYnZApETGBSAQDqd
      AvQqZubMPUfTDLZA5ASGPc61q+OIhbwY3LHFssRsgcgJDM8B/OEEnhjZi1rJuqkstkDkBIbv
      AGprG66eP47oI49alvhBLZAv2IrkvhfgC92/1VImEkHvkZ33vCJWxyYFoNfKELqOamEZi+Mf
      QX/AOKUv1Ir41hHUSjksXT0LgEM5bmdYAPmZy1ja/BSu/e60ZYk9HsM3HyS270frI49CCP2+
      ofmaENDaY6uPswoBcfcTI+rlPAoL11ErrqC0PIdYz26kJ4zXHevdi9TYCbRsHEAwvhGlpVvr
      /43R/yuGnwz3nT/9AY4cfgrf+9ZzliUOhYyvMBVTNyBEHYrHCwGB1Q9KAQDli/+vFaVxDuHx
      qgjGuxDeOACtvRul5TnD4wJAOXMH8b6vIdS2CdV8sw9y0x8Sw4GY909fxNNDbRi9YbCZteLD
      4SNHkE/NIA8NHZrA8VO/k078oMmr7OwYJt/+B3j9958j7NmzGxcujN670NWNPDxe6LUKhNAh
      9DrqpQdfXcre+gy+UAR6tQS9VpFeM/3hMWyBsnNTeOVVoKd97RObXl8IXckEigEvMtkcMvBh
      SyKBbZLbpEYiEaysrJhe6K7t3fBVzG+rym1SGW8mfm0BeLx49uAe/PJXx7Dxm8+v/edgBIXF
      WaihDgR1wOtZnQlelNwmdcOGDZifl3vcmtukMn6949cWgF5HVY3jpZdexty1y2v+uZqdxejV
      CIpLoyjoQcRDAiUA5v9fW8UPxyUnMGyBjr31s9/7RVMTY3f/lIH5JuZ+D7oKRPQw2fZT+KCr
      QEQPk20FwBaInMC2AvB6vXalJmqwrQACAWs34iYyw7YC4C6R5ARsgcjV2AKRq7EFIldjC0Su
      xhaIXI0tELkaWyByNdsKQOa5eCKr2FYAxSL3ASb72VYAPp91H7tIZFYTP4UKRvYfQnlpFrrW
      js6QwPsnz0gfRWa7UCKrSBeAGtyAJ/YNYPRsEarfj2X40JdIYEByJri1tVVqnzDZ+U/OBDPe
      TLx0Aej1AmZnZhFLtKGueLHBq+BKOo2U5ExwLBbD8vKyVG7OBDN+veOlC6BeXcFvT41CqWRR
      FCoifqAMQPa2FlsgcoKmzkQX73zxiWrNznXxKhA5Aa8CkauxAMjVbCsAmastRFaxrQB4EkxO
      wIfhyNXYApGrsQUiV2MLRK7GFohcjS0QuRpbIHI1tkDkapwJJlezrQA+3+aUyE62FUC5bLAF
      K9FD1tQjmf1DX8fQRj+W0IJECHj9jf+WPgZbIHIC6QLwaXGMPLoZqAO4dRsTOR+2JhLok5wJ
      bmtrx3KuCI/XB12vQVG8qJWygBCG8ZwJZrwV8dIFIKpFnD57AfsGt0FpjWJbCPj5h2nMy+4T
      vPMAotsPQa+W4A2EUVycQWmljjuj7zzwazgTzPj1jm9iJriEqclxTE2Oy37pffztvahXishM
      nUPH4BGkPv0Nuka++3sLgGi92XYSXJkdhV4tItqzG6XMHDqHjmLhygd2LYdcyra5xPyd65g3
      2Ime6GHi/gDkarYVgHjA1R6ih8m+c4BKxa7URA22nQMEAgHkcjl41CC8/tDdVwX0WhWKslqX
      tZL5zw4laoZtBSCEgE+LYsuRv4RPi37+IvRqGbVSFkLXsTz1CdLjH9m1RHIBW1ugUOIRqFoU
      CrD6S1EABSgsTKOwMIXwhq12LY9cwtYWKJOeRWl5Dj4tCq8aRL1cQCWbQiDSASF03hcgy/0v
      YDwatWtBp3AAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map Analysis' width='192'>
      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
      veuFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Price v/s Availability' width='192'>
      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
      /hfUvjzpPB7sEAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Price v/s Reviews' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Review v/s Availability' width='192'>
      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
      tAtPzdH/D1huh8xkObSMAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
